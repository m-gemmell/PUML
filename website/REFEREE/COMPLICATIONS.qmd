# Complications

Complications are negative affects that occurs along with a success when a player rolls a __Partial success__.
They are unfortunately more complicated to implement than a binary success and failure mechanic but they can lead to more interesting outcomes.
This section gives guidance and examples on how to utilise complications.

An important aspect of a partial success is that it is a success.
It can be frustrating as a player to not accomplish the task and then have to repeat the roll to accomplish it.
It is generally more interesting if the complication comes in the form of a downside, a new challenge, or a choice.

Of course sometimes you may think a challenge may require more than one success.
In that case you can use tracker/progress clocks which are covered below along with examples of how to implement complications.

## Trolley problem

A fun way to implement a complication is to create two downsides and allow the player to choice which one they want.
One of the best ways is to have one complication affect the PC and one complication affect the progress of their mission.
Example are below.

### Escort mission

The PC is escorting a NPC when enemies open fire. The PC makes an __action roll__ to escape the area. With a partial success they flee to the next area but someone is going to suffer damage from the enemy gunfire.

Complication choice:

- The PC suffers the damage.
- The hostage suffers the damage

### Looting

During a heist the PC is swiping all the valuable goods they can as fast as they can. The PC makes an __action roll__ to hurriedly collect goods before security/cops arrives. With a partial success they manage to gather loot but how much?

Complication choice:

- The PC drops their best weapon to maximise room on their body to carry as much loot as possible.
- The PC keeps their weapon but leaves some loot behind displeasing their employer. 

### Covert activities

The PC is trying to covertly get information through hacking, spy craft, or social engineering. They acquire information but how risky were they being?

Complication choice:

- The PC can play it safe and get one piece of intel.
- they PC can be risky, blowing their cover, but they extract 2 pieces of intel

## Two truths and a lie

When a PC gathers information/intel a great way to implement an implication is to provide them with true facts and false information.
The classic is two truths and a lie but equally you can give other combinations such as one truth and one lie or one truth and two lies based on the situation and what you can think of.

Do not say which facts are true and false, instead saying how many truths and lies you are giving.
This represents the PCs knowing how reliable the intel they have gathered is.
If you don't give exact numbers it is still good practice to say there may be lies in the intel.

Generally I try not to have a truth directly counteract a lie in the one set of intel.
In other words try not to have a truth of "Turkeys are weak against acid" and a lie of "Turkeys are strong against acid".
Instead set the truths and lies so the PCs can out the lie/s to determine the truths with further investigation and exploration. 

Examples of two truths and a lie are below.

### Enemy research

The PCs know they are up against a [Vampire](https://m-gemmell.github.io/PRIMEVAL_DEITIES/Tartarus/Keystones.html#VAMPORE). A PC goes to a library to research myths them on. Of course there are many falsehoods in myths so they find 2 truths and a lie.

- __True__: Vampires come about from the fusion of a Vampore, a blood thirsty lump of iron ore, and a power hungry human
- __True__: Vampires are weak against the light of the sun and moons.
- __False__: Vampires are weak to magnets due to their iron heart (The truth is they have magnetic powers them selves)

